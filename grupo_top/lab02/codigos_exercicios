EXERCICIO 01

#include <stdio.h>
#include <stdlib.h>//Biblioteca para usar rand.


int main(){
int matriz[3][3];
for(int i =0;i < 3; i ++){
  printf("\n");
  for(int j = 0; j< 3; j++){
    matriz[i][j] = rand() % 100;
    printf("%d " ,matriz[i][j]); }
}
int menorN = matriz[0][0];
int linha = 0;
for (int i = 0; i < 3; i++){
  for(int j = 0; j <3; j++){
    if(matriz[i][j]<menorN){
       menorN = matriz[i][j];
       linha = i; }}}
printf(" Linha que contém o menor valor: %i ", linha);
return 0;
}


EXERCICIO 02:
#include <stdio.h>
void checkNota (int MA) {
  if (MA >= 9) printf("A");
  else if (MA >= 7.5) printf("B");
  else if (MA >= 6) printf("C");
  else if (MA >= 4) printf("D");
  else printf("E"); }
int main() {
  int N1, N2, N3, ME, MA;
  printf("Digite a N1: ");
  scanf("%d", &N1);
  printf("Digite a N2: ");
  scanf("%d", &N2);
  printf("Digite a N3: ");
  scanf("%d", &N3);
  printf("Digite a ME: ");
  scanf("%d", &ME);
  MA = (N1 + N2*2 + N3*3 + ME)/7;
  printf("Média = %d\nNota = ", MA);
  checkNota(MA);
  return 0; }



EXERCICIO 03:
#include <stdio.h>
int main() {
  int digito = 9;
  printf("Digite um número ímpar (menor que 9):\n");
  scanf("%d", &digito);
  for (int i = 0; i < (digito/2 + 1); i++) { // quantidade de linhas
    for (int j = i + 1; j < digito - i + 1; j++) 
      printf("%d ", j);
    printf("\n"); }
  return 0; }

EXERCICIO 04:
#include <stdio.h>
#include <string.h>//Biblioteca para trabalhar com string mais facil.
int main(void){ 
char nome1[]= "Laura";
char nome2[]= "Alix";

if (strcmp(nome1,nome2) < 0 ){
printf("Nomes em ordem alfabetica: %s , %s ",nome1, nome2 ); }
else {printf("Nomes em ordem alfabetica: %s , %s", nome2,nome1); }
}
EXERCICIO 05:

#include <stdio.h>
#include <stdlib.h>//Biblioteca para usar rand
int multiplicalinha(int matriz[][3],int linha,int multiplica_linha){
printf("Matriz com a linha multiplicada: \n");
for(int j = 0; j < 3; j ++){
  matriz[linha][j] = matriz[linha][j] * multiplica_linha; }
for(int i =0; i < 3;i++){
  printf("\n");
  for(int j = 0;j < 3; j++){
    printf("%d ",matriz[i][j]); } } }
int multiplicacoluna(int matriz[][3],int coluna,int multiplica_coluna){
printf("Matriz com a coluna multiplicada: \n");
for(int i = 0; i< 3; i++){
     matriz[i][coluna] = matriz[i][coluna] * multiplica_coluna; }
for(int i = 0; i < 3; i++){
  printf("\n");
  for(int j = 0; j<3;j++){
    printf("%d ",matriz[i][j]); } } }
int main(void){
int matriz[3][3];

for(int i = 0; i < 3; i++){
  for(int j = 0; j< 3; j++){
        matriz[i][j] = rand() % 100; } }
printf("Matriz primária: \n ");
for (int i = 0; i <3;i++){
  printf("\n");
  for(int j = 0; j <3; j++) {
    printf("%d ",matriz[i][j]);
 } }
int multiplica_linha;
int multiplica_coluna;
int linha;
int coluna;
printf("\n Digite a linha que quer multiplicar:\n");
scanf("%d",&linha);
printf("\n Digite a coluna que deseja multiplicar:\n");
scanf("%d",&coluna);
printf("\n Digite o valor que quer multiplicar a linha: \n");
scanf("%d",&multiplica_linha);
printf("\n Digite o valor que deseja multiplicar a coluna: \n");
scanf("%d",&multiplica_coluna);
multiplicalinha(matriz,linha,multiplica_linha);
multiplicacoluna(matriz,coluna,multiplica_coluna);
 }

EXERCICIO 06:
#include <stdio.h>

int main(){
    int t_linha, t_coluna;
    
    printf("Digite quantas linhas e colunas a matriz possui: \n");
    scanf("%d %d", &t_linha, &t_coluna);
    
    int mat[t_linha][t_coluna], transp[t_coluna][t_linha];

    printf("Insira os elementos da matriz: \n");
    for(int i = 0; i < t_linha; i++){
        for(int j = 0; j < t_coluna; j++){
            scanf("%d", &mat[i][j]);
            transp[j][i] = mat[i][j];
        }
    }

    printf("Matriz original: \n");
    for(int i = 0; i < t_linha; i++){
        for(int j = 0; j < t_coluna; j++){
            printf("%d ", mat[i][j]);
        }
        printf("\n");
    }

    printf("Matriz transposta: \n");
    for(int i = 0; i < t_coluna; i++){
        for(int j = 0; j < t_linha; j++){
            printf("%d ", transp[i][j]);
        }
        printf("\n");
    }
    return 0;
}

EXERCICIO 07:
#include <stdio.h>
#include <string.h>

typedef struct
{
    char nome[20];
    int idade;
    float peso;
    float altura;
} Pessoa;

int main(){
    Pessoa pessoas[5];

    for (int i = 0; i < sizeof(pessoas)/sizeof(pessoas[0]); i++){
        printf("Digite o nome da pessoa %d: ", i + 1);
        scanf("%s", &pessoas[i].nome);
        
        printf("Digite a idade da pessoa %d: ", i + 1);
        scanf("%d", &pessoas[i].idade);

        printf("Digite o peso da pessoa %d: ", i + 1);
        scanf("%f", &pessoas[i].peso);

        printf("Digite a altura da pessoa %d: ", i + 1);
        scanf("%f", &pessoas[i].altura);

        printf("\n");
    }

    for (int i = 0; i < 3; i++){
        char n_nome[20];
        printf("Digite o nome da pessoa: \n");
        scanf("%s", n_nome);
        
        for (int j = 0; j < sizeof(pessoas)/sizeof(pessoas[0]); j++){
            if (strcmp(n_nome, pessoas[j].nome) == 0){
                printf("Nome: %s\n", pessoas[j].nome);
                printf("Idade: %d\n", pessoas[j].idade);
                printf("Peso: %.2f\n", pessoas[j].peso);
                printf("Altura: %.2f\n", pessoas[j].altura);
                break;
            } 
        }
    }
  return 0;
}

EXERCICIO 08:
#include <stdio.h>

void transposta(int linha, int coluna, int mat[linha][coluna], int resultado[coluna][linha]){
    for(int i = 0; i < linha; i++){
        for(int j = 0; j < coluna; j++){
            resultado[j][i] = mat[i][j];
        }
    }   
}

int main(){
    int linha = 2; 
    int coluna = 3;
    
    int matriz[2][3] = {
        {1,2,3},
        {4,5,6}
        };
   
    int m_transposta[coluna][linha];

    transposta(linha, coluna, matriz, m_transposta);

    printf("Transposed Matrix:\n");
    for (int i = 0; i < coluna; i++) {
        for (int j = 0; j < linha; j++) {
            printf("%d ", m_transposta[i][j]);
        }
        printf("\n");
    }

    return 0;
}
EXERCICIO 09:
#include <stdio.h>
#include <stdlib.h>//biblioteca para usar função rand
#include<time.h> //biblioteca para gerar número aleatórios diferentes


int transforma_matriz(int linha, int coluna, int matriz[linha][coluna]){
for(int i = 0; i < linha; i ++){
  for(int j = 0; j < coluna; j++){
     if(matriz[i][j] < 0){
       matriz[i][j] = matriz[i][j] * -1; } } } 

printf("\n Matriz Modular: \n");
for(int i = 0; i < linha; i ++){
  printf("\n");
  for(int j = 0; j < 3; j ++){
    printf("%d ",matriz[i][j]); } }


}


int main(void){

srand(time(NULL));

int linha = 3;
int coluna = 3;
int matriz[linha][coluna];
for(int i = 0; i < linha; i++){
  for(int j = 0;j < coluna; j++){
    matriz[i][j] = -rand() % 100; } }

printf("\n  Matriz primária: \n");
for(int i = 0; i < linha; i++){
  printf("\n");
  for(int j = 0; j < coluna; j ++){
    printf("%d ",matriz[i][j]); } }
transforma_matriz(linha, coluna,matriz);
 }

EXERCICIO 10:
#include <stdio.h>

void multiplicaLinha(int linha, int coluna, int matriz[linha][coluna],int linha_mult, int k) {
    for (int i = 0; i < coluna; i++) {
        matriz[linha_mult][i] *= k;
    }
}

void multiplicaColuna(int linha, int coluna, int matriz[linha][coluna],int coluna_mult, int k) {
    for (int i = 0; i < linha; i++) {
        matriz[i][coluna_mult] *= k;
    }
}

int main(void) {
    int linha = 3;
    int coluna = 3;
    int matriz[3][3] = {
        {1, 2, 3},
        {4, 5, 6},
        {7, 8, 9}};

    int linha_mult = 1;
    int col_mult = 1;
    int k = 2;

    printf("Matriz original\n");
    for (int i = 0; i < linha; i++) {
        for (int j = 0; j < coluna; j++) {
            printf("%d ", matriz[i][j]);
        }
        printf("\n");
    }

    multiplicaLinha(linha, coluna, matriz, linha_mult, k);

    printf("Linha multiplicada\n");
    for (int i = 0; i < linha; i++) {
        for (int j = 0; j < coluna; j++) {
            printf("%d ", matriz[i][j]);
        }
        printf("\n");
    }

    multiplicaColuna(linha, coluna, matriz, col_mult, k);

    printf("Coluna multiplicada\n");
    for (int i = 0; i < linha; i++) {
        for (int j = 0; j < coluna; j++) {
            printf("%d ", matriz[i][j]);
        }
        printf("\n");
    }
    return 0;
}

EXERCICIO 11:
#include <stdio.h>

void somaLinha(int l, int c, int matriz[l][c], int L1){
  for (int i = 0; i < c; i++){
    matriz[L1+1][i] += matriz[L1][i];
  }
}

void somacoluna(int l, int c, int matriz[l][c], int C1){
  for (int i = 0; i < l; i++){
    matriz[i][C1+1] += matriz[i][C1];
  }
}

int main() {
  int linha = 3;
  int coluna = 3;
  int L1 = 0;
  int C1 = 0;
  int matriz[3][3] = {
    {1, 2, 3},
    {4, 5, 6},
    {7, 8, 9}};

  printf("Matriz original\n");
    for (int i = 0; i < linha; i++) {
        for (int j = 0; j < coluna; j++) {
            printf("%d ", matriz[i][j]);
        }
        printf("\n");
    }

  somaLinha(linha, coluna, matriz, L1);

  printf("L1 + L2\n");
    for (int i = 0; i < linha; i++) {
        for (int j = 0; j < coluna; j++) {
            printf("%d ", matriz[i][j]);
        }
        printf("\n");
    }

  somacoluna(linha, coluna, matriz, C1);

  printf("C1 + C2\n");
    for (int i = 0; i < linha; i++) {
        for (int j = 0; j < coluna; j++) {
            printf("%d ", matriz[i][j]);
        }
        printf("\n");
    }
  
  return 0;
}

EXERCICIO 12:                                                                                          

#include <stdio.h>

int busca(char *string,char caractere){
for(int i = 0; string[i] != '\0'; i++){
  if(string[i] == caractere) {
    return i; } }
return -1;

 }

int main (void){

char frase[] = "frase aleatória só para fazer o laboratório.";
char caractere;
printf("\n Digite o caractere que deseja procurar:\n ");
scanf("%c",&caractere);
int posicao = busca(frase,caractere);

if(posicao != -1){
  printf("\n Caractere %c encontrado na posição %i\n", caractere , posicao); }
else{
  printf("\n Caractere %c não encontrado\n", caractere); }

printf("A frase era: %s", frase);


 }

EXERCICIO 13:
#include <stdio.h>
int main() {
  char str[100];
  int pos;
  printf("Digite a string (limite 100 char): ");
  scanf("%[^\n]%*c", str);
  printf("Deseja remover qual char (posicao inicial 0): ");
  scanf("%d", &pos);
  for (int i = pos; i <= 100; i++) {
    str[i] = str[i+1];}
  printf("%s", str);
  return 0; }

EXERCICIO 14:
#include <stdio.h>

int main() {
    char str[100], ch;
    int pos, length=0;
    printf("Digite a string (limite 100 char): ");
    scanf("%[^\n]%*c", str);
    printf("Digite o char: ");
    scanf(" %c", &ch);
    printf("Deseja adicionar em qual posicao: ");
    scanf("%d", &pos);
    while (str[length] != '\0') {
        length++; }
    for (int i = length; i >= pos; i--) {
        str[i] = str[i - 1]; }
    str[pos - 1] = ch;
    printf("%s\n", str);
    return 0;
}
